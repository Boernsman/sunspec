# 
# Copyright (c) 2011-2012, John D. Blair <jdb@moship.net>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# 
# * Neither the name of John D. Blair nor his lackeys may be used
#   to endorse or promote products derived from this software
#   without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
# JOHN D. BLAIR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.


#
# environmental models
#

#
# original base meteorological model
# DEPRECATED!  Only shown here for historical reasons
#
model suns {
  name "base meterological"
  did 301
  datapoints {
    E_BaseMet_AirTemperature      { int32 u=C        }
    E_BaseMet_RelativeHumidity    { int32 u=Pct  }
    E_BaseMet_BarometricPressure  { int32 u=hPa      }
    E_BaseMet_WindSpeed           { int32 u=mps      }
    E_BaseMet_WindDirection       { int32 u=deg      }
    E_BaseMet_Rain                { int32 u=in       } # yes, inches!
    E_BaseMet_Snow                { int32 u=in       } # yes, inches!
    E_BaseMet_PPTType             { int32            }
    E_BaseMet_ElectricalField     { int32 u=Vm       }
    E_BaseMet_SurfaceWetness      { int32 u=kO       }
    E_BaseMet_SoilMoisture        { int32 u=Pct  }
  }
}

#
# deprecated model is removed from test data
#
#data suns_met301_test {
#  301
#  22
#  int32:18
#  int32:222
#  int32:17
#  int32:234
#  int32:10
#  int32:0
#  int32:0x80000000
#  int32:0x80000000
#  int32:0x80000000
#  int32:0x80000000
#  int32:0x80000000
#}

#
# version 1.1 base meteorological model
#
model suns {
  name "meteorological v1.1"
  did 307
  datapoints {
    TmpAmb         { int16.-1  label="Ambient Temperature" u=C }
    RH             { int16     label="Relative Humidity" u=Pct }
    Pres           { int16     label="Barometric Pressure" u=HPa }
    WndSpd         { int16     label="Wind Speed" u=mps }
    WndDir         { int16     label="Wind Direction" u=deg }
    Rain           { int16     label="Rainfall" u=mm }
    Snw            { int16     label="Snow Depth" u=mm }
    PPT            { int16     label="Precipitation Type" }
    ElecFld        { int16     label="Electric Field" u=Vm }
    SurWet         { int16     label="Surface Wetness" u=kO }
    SoilWet        { int16     label="Soil Wetness" u=Pct }
  }
}


data suns_met307_test {
  307
  11
  uint16:18
  uint16:222
  uint16:17
  uint16:234
  uint16:10
  uint16:0
  uint16:0x80000000
  uint16:0x80000000
  uint16:0x80000000
  uint16:0x80000000
  uint16:0x80000000
}

#
# irradiance model
#
model suns {
  name "irradiance"
  did 302
  datapoints repeating {
    GHI   { uint16 u=Wm2 label="Global Horizontal Irradiance" u=Wm2 }
    POAI  { uint16 u=Wm2 label="Plane of Array Irradiance" u=Wm2 }
    DFI   { uint16 u=Wm2 label="Diffuse Irradiance" u=Wm2 }
    DNI   { uint16 u=Wm2 label="Direct Irradiance" u=Wm2 }
    OTI   { uint16 u=Wm2 label="Other Irradiance" u=Wm2 }
  }
}

#
# back of module temperature
#
model suns {
  name "back of module temperature"
  did 303
  datapoints repeating {
    TmpBOM { int16.-1 u=C req label="Back of Module Temperature" }
  }
}


data suns_met303_test {
  303
  4
  int16:20
  int16:18
  int16:19
  int16:21
} 

#
# inclinometer
#
model suns {
  name "inclinometer"
  did 304
  datapoints repeating {
    InclX                 { int32.-2 u=deg label="X Axis Tilt" req }
    InclY                 { int32.-2 u=deg label="Y Axis Tilt" }
    InclZ                 { int32.-2 u=deg label="Z Axis Tilt" }
  }
}


data suns_met304_test {
  304
  12
  int32:920
  int32:0x80000000
  int32:0x80000000
  int32:930
  int32:0x80000000
  int32:0x80000000
}


#
# location
#
model suns {
  name "location"
  did 305
  datapoints {
    Tm                     { string.10 label="Time (UTC)" u=gpsTm }
    Date                   { string.08 label="Date (UTC)" u=gpsDt }
    Loc                    { string.40 label="location" }
    Lat                    { int32.-7  label="Latitude" u=deg req }
    Long                   { int32.-7  label="Longitude" u=deg req }
    Alt                    { int32     label="Altitude" u=m  }
  }
}


#
# reference point
#
model suns {
    name "reference point"
    did 306
    datapoints {
        GHI                 { uint16 label="Global Horizontal Irradiance" u=Wm2 }
        A                   { int32  label="Current" u=A }
        V                   { int32  label="Voltage" u=V }
        Tmp                 { int32  label="Temperature" u=C }
    }
}    


#
# mini weather map
#
model suns {
    name "mini weather map"
    did 308
    datapoints {
        GHI             { uint16 label="Global Horizontal Irradiance" u=Wm2 }
        TmpBOM          { int16 label="Back of Module Temperature" u=C }
        TmpAmb          { int16 label="Ambient Temperature" u=C }
        WndSpd          { int16 label="Wind Speed" u=mps }
    }
}


