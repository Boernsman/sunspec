# 
# Copyright (c) 2011-2012, John D. Blair <jdb@moship.net>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# 
# * Neither the name of John D. Blair nor his lackeys may be used
#   to endorse or promote products derived from this software
#   without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
# JOHN D. BLAIR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.


#
# ac meter model
#
model suns {
  name "ac_meter"
  did 201 "single phase (AN or AB) meter"
  did 202 "split single phase (ABN) meter"
  did 203 "wye-connect three phase (abcn) meter"
  did 204 "delta-connect three phase (abc) meter"
  datapoints {
    A                 { int16.A_SF     u=A    req label="Current"    }
    AphA              { int16.A_SF     u=A    req label="Current A"  }
    AphB              { int16.A_SF     u=A    req={ 202 203 204 } label="Current B"  }
    AphC              { int16.A_SF     u=A    req label="Current C"  }
    A_SF              { sunssf                                        }
    PhV               { int16.V_SF     u=V    req label="Voltage LN" }
    PhVphA            { int16.V_SF     u=V    req={ 201 202 203 } label="Voltage AN" }
    PhVphB            { int16.V_SF     u=V    req={ 202 203 } label="Voltage BN" }
    PhVphC            { int16.V_SF     u=V    req={ 203 } label="Voltage CN" }
    PPV               { int16.V_SF     u=V    req label="Voltage LL" }
    PhVphAB           { int16.V_SF     u=V    req={ 202 203 204 } label="Voltage AB" }
    PhVphBC           { int16.V_SF     u=V    req={ 203 204 } label="Voltage BC" }
    PhVphCA           { int16.V_SF     u=V    req={ 203 204 } label="Voltage CA" }
    V_SF              { sunssf                req }
    Hz                { int16.Hz_SF    u=Hz   req label="Frequency" }
    Hz_SF             { sunssf                                        }
    W                 { int16.W_SF     u=W    req label="Power" }
    WphA              { int16.W_SF     u=W    label="Power A" }
    WphB              { int16.W_SF     u=W    label="Power B" }
    WphC              { int16.W_SF     u=W    label="Power C" }
    W_SF              { sunssf req }
    VA                { int16.VA_SF    u=VA   label="Apparent Power" }
    VAphA             { int16.VA_SF    u=VA   label="Apparent Power A" }
    VAphB             { int16.VA_SF    u=VA   label="Apparent Power B" }
    VAphC             { int16.VA_SF    u=VA   label="Apparent Power C" }
    VA_SF             { sunssf                                        }
    VAR               { int16.VAR_SF   u=var  label="Reactive Power" }
    VARphA            { int16.VAR_SF   u=var  label="Reactive Power A" }
    VARphB            { int16.VAR_SF   u=var  label="Reactive Power B" }
    VARphC            { int16.VAR_SF   u=var  label="Reactive Power C" }
    VAR_SF            { sunssf                                        }
    PF                { int16.PF_SF    u=PFPct label="Power Factor" }
    PFphA             { int16.PF_SF    u=PFPct label="Power Factor A" }
    PFphB             { int16.PF_SF    u=PFPct label="Power Factor B" }
    PFphC             { int16.PF_SF    u=PFPct label="Power Factor C" }
    PF_SF             { sunssf                                        }
    TotWhExp          { acc32.TotWh_SF u=Wh   req label="Energy Exported" }
    TotWhExpPhA       { acc32.TotWh_SF u=Wh   label="Energy Exported A" }
    TotWhExpPhB       { acc32.TotWh_SF u=Wh   label="Energy Exported B" }
    TotWhExpPhC       { acc32.TotWh_SF u=Wh   label="Energy Exported C" }
    TotWhImp          { acc32.TotWh_SF u=Wh   req label="Energy Imported" }
    TotWhImpPhA       { acc32.TotWh_SF u=Wh   label="Energy Imported A" }
    TotWhImpPhAB      { acc32.TotWh_SF u=Wh   label="Energy Imported B" }
    TotWhImpPhAC      { acc32.TotWh_SF u=Wh   label="Energy Imported C" }
    TotWh_SF          { sunssf                req                         }
    TotVAhExp         { acc32.TotVAh_SF   u=VAh label="Apparent Energy Exported" }
    TotVAhExpPhA      { acc32.TotVAh_SF   u=VAh label="Apparent Energy Exported A" }
    TotVAhExpPhB      { acc32.TotVAh_SF   u=VAh label="Apparent Energy Exported B" }
    TotVAhExpPhC      { acc32.TotVAh_SF   u=VAh label="Apparent Energy Exported C" }
    TotVAhImp         { acc32.TotVAh_SF   u=VAh label="Apparent Energy Imported" }
    TotVAhImpPhA      { acc32.TotVAh_SF   u=VAh label="Apparent Energy Imported A" }
    TotVAhImpPhB      { acc32.TotVAh_SF   u=VAh label="Apparent Energy Imported B" }
    TotVAhImpPhC      { acc32.TotVAh_SF   u=VAh label="Apparent Energy Imported C" }
    TotVAh_SF         { sunssf                                            }
    TotVArhImpQ1      { acc32.TotVArh_SF u=varh label="Q1 Reactive Energy Imported"  }
    TotVArhImpQ1PhA   { acc32.TotVArh_SF u=varh label="Q1 Reactive Energy Imported A" }
    TotVArhImpQ1PhB   { acc32.TotVArh_SF u=varh label="Q1 Reactive Energy Imported B" }
    TotVArhImpQ1PhC   { acc32.TotVArh_SF u=varh label="Q1 Reactive Energy Imported C" }
    TotVArhImpQ2      { acc32.TotVArh_SF u=varh label="Q2 Reactive Energy Imported"  }
    TotVArhImpQ2PhA   { acc32.TotVArh_SF u=varh label="Q2 Reactive Energy Imported A" }
    TotVArhImpQ2PhB   { acc32.TotVArh_SF u=varh label="Q2 Reactive Energy Imported B" }
    TotVArhImpQ2PhC   { acc32.TotVArh_SF u=varh label="Q2 Reactive Energy Imported C" }
    TotVArhImpQ3      { acc32.TotVArh_SF u=varh label="Q3 Reactive Energy Exported"  }
    TotVArhImpQ3PhA   { acc32.TotVArh_SF u=varh label="Q3 Reactive Energy Exported A" }
    TotVArhImpQ3PhB   { acc32.TotVArh_SF u=varh label="Q3 Reactive Energy Exported B" }
    TotVArhImpQ3PhC   { acc32.TotVArh_SF u=varh label="Q3 Reactive Energy Exported C" }
    TotVArhImpQ4      { acc32.TotVArh_SF u=varh label="Q4 Reactive Energy Imported"  }
    TotVArhImpQ4PhA   { acc32.TotVArh_SF u=varh label="Q4 Reactive Energy Imported A" }
    TotVArhImpQ4PhB   { acc32.TotVArh_SF u=varh label="Q4 Reactive Energy Imported B" }
    TotVArhImpQ4PhC   { acc32.TotVArh_SF u=varh label="Q4 Reactive Energy Imported C" }
    TotVArh_SF        { sunssf                                            }
    Evt               { bitfield32.MeterEvt_BF req label="Meter Event Flags" }
  }

  define MeterEvt_BF {
    M_EVENT_Power_failure       { 2 "Loss of power or phase" }
    M_EVENT_Under_Voltage       { 3 "Voltage below threshold (Phase Loss)" }
    M_EVENT_Low_PF              { 4 "Power Factor below threshold" }
    M_EVENT_Over_Current        { 5 "Current Input over threshold" }
    M_EVENT_Over_Voltage        { 6 "Voltage Input over threshold" }
    M_EVENT_Missing_Sensor      { 7 "Sensor not connected" }
    M_EVENT_Reserved1           { 8 "Reserved for future" }
    M_EVENT_Reserved2           { 9 "Reserved for future" }
    M_EVENT_Reserved3           { 10 "Reserved for future" }
    M_EVENT_Reserved4           { 11 "Reserved for future" }
    M_EVENT_Reserved5           { 12 "Reserved for future" }
    M_EVENT_Reserved6           { 13 "Reserved for future" }
    M_EVENT_Reserved7           { 14 "Reserved for future" }
    M_EVENT_Reserved8           { 15 "Reserved for future" }
    M_EVENT_OEM01               { 16 "OEM 1" }
    M_EVENT_OEM02               { 17 "OEM 2" }
    M_EVENT_OEM03               { 18 "OEM 3" }
    M_EVENT_OEM04               { 19 "OEM 4" }
    M_EVENT_OEM05               { 20 "OEM 5" }
    M_EVENT_OEM06               { 21 "OEM 6" }
    M_EVENT_OEM07               { 22 "OEM 7" }
    M_EVENT_OEM08               { 23 "OEM 8" }
    M_EVENT_OEM09               { 24 "OEM 9" }
    M_EVENT_OEM10               { 25 "OEM 10" }
    M_EVENT_OEM11               { 26 "OEM 11" }
    M_EVENT_OEM12               { 27 "OEM 12" }
    M_EVENT_OEM13               { 28 "OEM 13" }
    M_EVENT_OEM14               { 29 "OEM 14" }
    M_EVENT_OEM15               { 30 "OEM 15" }
  }
}


#
# ac meter model (float)
#
model suns {
  name "ac_meter_f"
  did 211 "single phase (AN or AB) meter"
  did 212 "split single phase (ABN) meter"
  did 213 "wye-connect three phase (abcn) meter"
  did 214 "delta-connect three phase (abc) meter"
  datapoints {
    A               { float32 u=A req }
    AphA            { float32 u=A req }
    AphB            { float32 u=A req={ 212 213 214 } }
    AphC            { float32 u=A req={ 213 214 } }
    PhV             { float32 u=V req={ 212 213 } }
    PhVphA          { float32 u=V req={ 212 213 } }
    PhVphB          { float32 u=V req={ 212 213 } }
    PhVphC          { float32 u=V req={ 213 } }
    PPV             { float32 u=V req={ 212 213 214} }
    PPVphAB         { float32 u=V req={ 212 213 214} }
    PPVphBC         { float32 u=V req={ 213 214 } }
    PPVphCA         { float32 u=V req={ 213 214 } }
    Hz              { float32 u=Hz req }
    W               { float32 u=W req }
    WphA            { float32 u=W }
    WphB            { float32 u=W }
    WphC            { float32 u=W }
    VA              { float32 u=VA }
    VAphA           { float32 u=VA }
    VAphB           { float32 u=VA }
    VAphC           { float32 u=VA }
    VAR             { float32 u=var }
    VARphA          { float32 u=var }
    VARphB          { float32 u=var }
    VARphC          { float32 u=var }
    PF              { float32 u=PF }
    PFphA           { float32 u=PF }
    PFphB           { float32 u=PF }
    PFphC           { float32 u=PF }
    TotWhExp        { acc32   u=Wh req }
    TotWhExpPhA     { acc32   u=Wh }
    TotWhExpPhB     { acc32   u=Wh }
    TotWhExpPhC     { acc32   u=Wh }
    TotWhImp        { acc32   u=Wh req }
    TotWhImpPhA     { acc32   u=Wh }
    TotWhImpPhB     { acc32   u=Wh }
    TotWhImpPhC     { acc32   u=Wh }
    TotVAhExp       { acc32   u=VAh }
    TotVAhExpPhA    { acc32   u=VAh }
    TotVAhExpPhB    { acc32   u=VAh }
    TotVAhExpPhC    { acc32   u=VAh }
    TotVAhImp       { acc32   u=VAh }
    TotVAhImpPhA    { acc32   u=VAh }
    TotVAhImpPhB    { acc32   u=VAh }
    TotVAhImpPhC    { acc32   u=VAh }
    TotVArhImpQ1    { acc32   u=varh }
    TotVArhImpQ1phA { acc32   u=varh }
    TotVArhImpQ1phB { acc32   u=varh }
    TotVArhImpQ1phC { acc32   u=varh }
    TotVArhImpQ2    { acc32   u=varh }
    TotVArhImpQ2phA { acc32   u=varh }
    TotVArhImpQ2phB { acc32   u=varh }
    TotVArhImpQ2phC { acc32   u=varh }
    TotVArhImpQ3    { acc32   u=varh }
    TotVArhImpQ3phA { acc32   u=varh }
    TotVArhImpQ3phB { acc32   u=varh }
    TotVArhImpQ3phC { acc32   u=varh }
    TotVArhImpQ4    { acc32   u=varh }
    TotVArhImpQ4phA { acc32   u=varh }
    TotVArhImpQ4phB { acc32   u=varh }
    TotVArhImpQ4phC { acc32   u=varh }
    Evt             { bitfield32.MeterEvt_BF req }
  }

  define MeterEvt_BF {
    M_EVENT_Power_failure       { 2 "Loss of power or phase" }
    M_EVENT_Under_Voltage       { 3 "Voltage below threshold (Phase Loss)" }
    M_EVENT_Low_PF              { 4 "Power Factor below threshold" }
    M_EVENT_Over_Current        { 5 "Current Input over threshold" }
    M_EVENT_Over_Voltage        { 6 "Voltage Input over threshold" }
    M_EVENT_Missing_Sensor      { 7 "Sensor not connected" }
    M_EVENT_Reserved1           { 8 "Reserved for future" }
    M_EVENT_Reserved2           { 9 "Reserved for future" }
    M_EVENT_Reserved3           { 10 "Reserved for future" }
    M_EVENT_Reserved4           { 11 "Reserved for future" }
    M_EVENT_Reserved5           { 12 "Reserved for future" }
    M_EVENT_Reserved6           { 13 "Reserved for future" }
    M_EVENT_Reserved7           { 14 "Reserved for future" }
    M_EVENT_Reserved8           { 15 "Reserved for future" }
    M_EVENT_OEM01               { 16 "OEM 1" }
    M_EVENT_OEM02               { 17 "OEM 2" }
    M_EVENT_OEM03               { 18 "OEM 3" }
    M_EVENT_OEM04               { 19 "OEM 4" }
    M_EVENT_OEM05               { 20 "OEM 5" }
    M_EVENT_OEM06               { 21 "OEM 6" }
    M_EVENT_OEM07               { 22 "OEM 7" }
    M_EVENT_OEM08               { 23 "OEM 8" }
    M_EVENT_OEM09               { 24 "OEM 9" }
    M_EVENT_OEM10               { 25 "OEM 10" }
    M_EVENT_OEM11               { 26 "OEM 11" }
    M_EVENT_OEM12               { 27 "OEM 12" }
    M_EVENT_OEM13               { 28 "OEM 13" }
    M_EVENT_OEM14               { 29 "OEM 14" }
    M_EVENT_OEM15               { 30 "OEM 15" }
  }
}
