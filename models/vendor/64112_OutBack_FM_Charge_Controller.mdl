# 
# Copyright (c) 2011-2012, John D. Blair <jdb@moship.net>
# All rights reserved.
#
# 10x_Inverter.mdl modified to OutBack Charge Controller.mdl by
# Darren Emmons OutBack Power Technologies 
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# 
# * Neither the name of John D. Blair nor his lackeys may be used
#   to endorse or promote products derived from this software
#   without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
# JOHN D. BLAIR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.


#
# OutBack FM Charge Controller
#
model suns {
  name "OutBack FM Charge Controller"
  did 64112 "OutBack FM Charge Controller"
  datapoints {
    Port                          {  uint16 label="Port Number" req }
    V_SF                          {  sunssf req }
    C_SF                          {  sunssf req }
    H_SF                          {  sunssf req }
    P_SF                          {  sunssf req }
    AH_SF                         {  sunssf req }
    KWH_SF                        {  sunssf req }
    CC_Config_fault               {  bitfield16 label="Faults" req }
    CC_Config_absorb_V            {  uint16.V_SF u=V label="Absorb" req }
    CC_Config_absorb_Hr           {  uint16.H_SF u=Tmh label="Absorb Time" req }
    CC_Config_absorb_End_A        {  uint16.V_SF u=A label="Absorb End" req }
    CC_Config_rebulk_V            {  uint16.V_SF u=V label="Rebulk" req }
    CC_Config_float_V             {  uint16.V_SF u=V label="Float" req }
    CC_Config_max_Chg_A           {  uint16.V_SF u=A label="Maximum Charge" req }
    CC_Config_equalize_V          {  uint16.V_SF u=V label="Equalize" req }
    CC_Config_equalize_Hr         {  uint16 u=Tmh label="Equalize Time" req }
    CC_Config_auto_equalize       {  uint16 u=Tmd label="Auto Equalize Interval" req }
    CC_Config_MPPT_mode           {  enum16.MPPT_mode_Enum label="MPPT mode" req }
    CC_Config_sweep_width         {  enum16.Sweep_Width_Enum label="Sweep Width" req }
    CC_Config_sweep_max           {  enum16.Sweep_Max_Enum label="Sweep Maximum" req }
    CC_Config_U_Pick_Duty_cyc     {  uint16.V_SF u=Pct label="U-Pick PWM Duty Cycle" req }
    CC_Config_grid_tie            {  enum16.Grid_Tie_Enum label="Grid Tie Mode" req }
    CC_Config_temp_comp           {  enum16.Temp_comp_Enum label="Temp Comp Mode" req }
    CC_Config_temp_comp_llimt     {  uint16.V_SF u=V label="Temp Comp Lower Limit" req }
    CC_Config_temp_comp_hlimt     {  uint16.V_SF u=V label="Temp Comp Upper Limit" req }
    CC_Config_auto_restart        {  enum16.Auto_restart_Enum label="Auto Restart Mode" req }
    CC_Config_wakeup_VOC          {  uint16.V_SF u=V label="Wakeup VOC Change" req }
    CC_Config_snooze_mode_A       {  uint16.V_SF u=A label="Snooze Mode" req }
    CC_Config_wakeup_interval     {  uint16 u=Tms label="Wakeup Interval" req }
    CC_Config_AUX_mode            {  enum16.AUX_mode_Enum label="AUX Output Mode" req }
    CC_Config_AUX_control         {  enum16.AUX_control_Enum label="AUX Output Control" req }
    CC_Config_AUX_state           {  enum16.AUX_state_Enum label="AUX Output State" req }
    CC_Config_AUX_polarity        {  enum16.AUX_polarity_Enum label="AUX Output Polarity" req }
    CC_Config_AUX_L_Batt_disc     {  uint16.V_SF u=V label="AUX Low Battery Disconnect" req }
    CC_Config_AUX_L_Batt_rcon     {  uint16.V_SF u=V label="AUX Low Battery Reconnect" req }
    CC_Config_AUX_L_Batt_dly      {  uint16 u=Tms label="AUX Low Battery Disconnect Delay" req }
    CC_Config_AUX_Vent_fan_V      {  uint16.V_SF u=V label="AUX Vent Fan" req }
    CC_Config_AUX_PV_triggerV     {  uint16.V_SF u=V label="AUX PV Trigger" req }
    CC_Config_AUX_PV_trg_h_tm     {  uint16 u=Tms label="AUX PV Trigger Hold Time" req }
    CC_Config_AUX_Nlite_ThrsV     {  uint16.V_SF u=V label="AUX Night Light Threshold" req }
    CC_Config_AUX_Nlite_On_tm     {  uint16.H_SF u=Tmh label="AUX Night Light On Time" req }
    CC_Config_AUX_Nlite_On_hist   {  uint16 u=Tms label="AUX Night Light On Hysterisis" req }
    CC_Config_AUX_Nlite_Off_hist  {  uint16 u=Tms label="AUX Night Light Off Hysterisis" req }
    CC_Config_AUX_Error_batt_V    {  uint16.V_SF u=V label="AUX Error Output Low Battery" req }
    CC_Config_AUX_Divert_h_time   {  uint16.V_SF u=Tms label="AUX Divert Hold Time" req }
    CC_Config_AUX_Divert_dly_time {  uint16 u=Tms label="AUX Divert Delay Time" req }
    CC_Config_AUX_Divert_Rel_V    {  uint16.V_SF u=V label="AUX Divert Relative" req }
    CC_Config_AUX_Divert_Hyst_V   {  uint16.V_SF u=V label="AUX Divert Hysterisis" req }
    CC_Config_MajorFWRev          {  uint16 label="FM CC Major Firmware Number" req }
    CC_Config_MidFWRev            {  uint16 label="FM CC Mid Firmware Number" req }
    CC_Config_MinorFWRev          {  uint16 label="FM CC Minor Firmware Number" req }
    CC_Config_DataLog_Day_offset  {  uint16 u=Tmd label="Set Data Log Day Offset" req } 
    CC_Config_DataLog_Cur_Day_off {  uint16 u=Tmd label="Current Data Log Day Offset" req }
    CC_Config_DataLog_Daily_AH    {  uint16 u=Ah label="Data Log Daily" req }
    CC_Config_DataLog_Daily_KWH   {  uint16.KWH_SF u=kWh label="Data Log Daily" req } 
    CC_Config_DataLog_Max_Out_A   {  uint16.V_SF u=A label="Data Log Daily Maximum Output" req }
    CC_Config_DataLog_Max_Out_W   {  uint16.V_SF u=W label="Data Log Daily Maximum Output" req } 
    CC_Config_DataLog_Absorb_T    {  uint16 u=Tms label="Data Log Daily Absorb Time" req } 
    CC_Config_DataLog_Float_T     {  uint16 u=Tms label="Data Log Daily Float Time" req } 
    CC_Config_DataLog_Min_Batt_V  {  uint16.V_SF u=V label="Data Log Daily Minimum Battery" req }
    CC_Config_DataLog_Max_Batt_V  {  uint16.V_SF u=V label="Data Log Daily Maximum Battery" req }
    CC_Config_DataLog_Max_Input_V {  uint16.V_SF u=V label="Data Log Daily Maximum Input" req }
    CC_Config_DataLog_Clear       {  uint16 label="Data Log Clear" req }
    CC_Config_DataLog_Clr_Comp    {  uint16 label="Data Log Clear Complement" req }
  }


  define Grid_Tie_Enum {
    Disabled  { 0 "Grid Tie Mode Disabled" }
    Enabled   { 1 "Grid Tie Mode Enabled" }
  }

  define MPPT_mode_Enum {
    Auto    { 0 "Auto" }
    U_Pick  { 1 "U-Pick" }
    Wind    { 2 "Wind" }
  }

  define Sweep_Width_Enum {
    Half  { 0 "Half" }
    Full  { 1 "Full" }
  }

  define Sweep_Max_Enum {
    Eighty_Percent         { 0 "80 %" }
    Eighty_Five_Percent    { 1 "85 %" }
    Ninty_Percent          { 2 "90 %" }
    Ninty_Nine_Percent     { 3 "99 %" }
  }

  define Temp_comp_Enum {
    Wide     { 0 "Wide" }
    Limited  { 1 "Limited" }
  }

  define Auto_restart_Enum {
    Off                                    { 0 "Off" }
    Every_90_Minutes                       { 1 "Every 90 Minutes" }
    Every_90_Minutes_if_Absorb_or_Float    { 2 "Every 90 Minutes if Absorb or Float" }
  }

  define AUX_mode_Enum {
    Float                      { 0 "Float" }
    Diversion_Relay            { 1 "Diversion: Relay" }
    Diversion_Solid_St         { 2 "Diversion: Solid St" } 
    Low_Batt_Disconnect        { 3 "Low Batt Disconnect" }
    Remote                     { 4 "Remote" }
    Vent_Fan                   { 5 "Vent Fan" }
    PV_Trigger                 { 6 "PV Trigger" }
    Error_Output               { 7 "Alarm Output" }
    Night_Light                { 8 "Night Light" }
  }

  define AUX_control_Enum {
    Off          { 0 "Off" }
    Auto         { 1 "Auto" }
    On           { 2 "On" }
  }

  define AUX_state_Enum {
    Disabled  { 0 "Disabled" }
    Enabled   { 1 "Enabled" }
  }

  define AUX_polarity_Enum {
    Low       { 0 "Low" }
    High      { 1 "High" }
  }
}

data OutBack_AXS_64112_test {
    64112
    64
    -1
    0
    -1
    0
    0
    -1
}



  


