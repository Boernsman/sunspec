
model suns {
	name "datatype test"
	did 9999 "datatype test"
	datapoints {
		T_header      { string.32  }
		T_some_number { uint32 }
	}
	datapoints repeating {
		T_uint16      { uint16     }
		T_int16       { int16      }
		T_uint32      { uint32     }
		T_int32	      { int32      }
		T_uint16_ni   { uint16     }
		T_int16_ni    { int16      }
		T_uint32_ni   { uint32     }
		T_int32_ni    { int32      }
		T_float32     { float32    }
		T_string_16   { string.16  }
		T_string_08   { string.8   }
		T_string_32   { string.32  }
	        T_acc16       { acc16      }
		T_acc16_2     { acc16      }
	        T_acc32       { acc32      }
	        T_acc32_2     { acc32      }
		T_enum16      { enum16.T_enum16_Enum  }
		T_bitfield16  { bitfield16.T_bitfield16_BF }
		T_bitfield32  { bitfield32 }
	}

	define T_enum16_Enum {
		TEST_ZERO   { 0 "value zero"  }
		TEST_ONE    { 0 "value one"   }
		TEST_TWO    { 0 "value two"   }
		TEST_THREE  { 0 "value three" }
		TEST_FOUR   { 0 "value four"  }
		TEST_FIVE   { 0 "value five " }
		TEST_SIX    { 0 "value six"   }
		TEST_SEVEN  { 0 "value seven" }
		TEST_EIGHT  { 0 "value eight" }
	}

	define T_bitfield16_BF {
		TEST_BIT_01 { 0x01 "bit 01"   }
		TEST_BIT_02 { 0x02 "bit 02"   }
		TEST_BIT_03 { 0x03 "bit 03"   }
		TEST_BIT_04 { 0x04 "bit 04"   }
		TEST_BIT_05 { 0x05 "bit 05"   }
		TEST_BIT_06 { 0x06 "bit 06"   }
		TEST_BIT_07 { 0x07 "bit 07"   }
		TEST_BIT_08 { 0x08 "bit 08"   }
	}
}
		

data type_test {
	9999                           # did
	104                            # len
	0x00                           # t_uint16
	-153                           # t_int16
	uint32:4200000                 # t_uint32
	int32:-4200000                 # t_int32
	uint16:0xFFFF                  # t_uint16_ni - not implemented value
	uint16:0x8000                  # t_int16_ni  - not implemented value
	uint32:0xFFFFFFFF              # t_uint32_ni - not implemented value
	uint32:0x80000000              # t_int32_ni  - not implemented value
	float32:9.525                  # t_float32
	string.16:"this is a string"   # t_string
	string.8:"this is a string"    # t_string
	string.32:"this is a string that is bigger"   # t_string
	5555                           # t_acc16
	0xFFFF                         # t_acc16_2
	uint32:900000                  # t_acc32
	uint32:0xFFFFFFFF              # t_acc32_2
	42                             # t_enum
	bitfield16:0x0F0F              # t_bitfield16
	bitfield32:0xFF00FF00          # t_bitfield32
}
