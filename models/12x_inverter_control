#
# inverter nameplate ratings
#
model suns {
    name "inverter_nameplate"
    did 120 "inverter_nameplate"
    datapoints {
        WRtg            { uint16.WRtg_SF }
        WRtg_SF         { sunssf }
        VARtg           { uint16 }
        VARtg_SF        { sunssf }
        VArPosRtg       { uint16.VArRtg_SF }
        VArNegRtg       { uint16.VArRtg_SF }
        VArRtg_SF       { sunssf }
        ARtg            { uint16 }
        ARtg_SF         { sunssf }
        PFLeadRtg       { int16.PFRtg_SF }
        PFLagRtg        { int16.PFRtg_SF }
        PFRtg_SF        { sunssf }
        WHRtg_SF        { sunssf }
        MaxChgRte       { uint16.MaxChgRte_SF }
        MaxChgRte_SF    { int16 }
        MaxDisChgRte    { uint16.MaxDisChgRte_SF }
        MaxDisChgRte_SF { int16 }
    }
}

#
# Inverter Control Basic Settings
#
model suns {
    name "inverter_basic_settings"
    did 121 "inverter_basic_settings"
    datapoints {
        WMax            { uint16.WMax_SF }
        WMax_SF         { sunssf }
        WRef            { uint16.WMax_SF }
        VMax            { uint16.VMinMax_SF }
        VMin            { uint16.VMinMax_SF }
        VMinMax_SF      { sunssf }
        VAMax           { uint16.VAMax_SF }
        VAMax_SF        { sunssf }
        VArPosMax       { uint16.VArMax_SF }
        VArNegMax       { uint16.VArMax_SF }
        VArMax_SF       { sunssf }
        VRef            { uint16.VRef_SF }
        VRef_SF         { sunssf }
        VRefOfs         { int16.VRefOfs_SF }
        VRefOfs_SF      { sunssf }
        WGra            { int16.WGra_SF }
        WGra_SF         { sunssf }
        PFSign          { enum16.PFSign_enum }
        PFLeadMin       { int16.PFMin_SF }
        PFLagMin        { int16.PFMin_SF }
        PFMin_SF        { sunssf }
        VArAct          { enum16.VArAct_enum }
        ClcTotVA        { enum16.ClcTotVA_enum }
        MaxRmpRte       { uint16.MaxRmpRte_SF }
        MaxRmpRte_SF    { sunssf }
        ECPNomHz        { uint16.ECPNomHz_SF }
        ECPNomHz_SF     { sunssf }
        Connected_Phase { enum16.Connected_Phase_enum }
    }
    define PFSign_enum {
        I_IEC  { 1 "IEC sign convention" }
        I_IEEE { 2 "IEEE sign convention" }
    }

    define VArAct_enum {
        switch   { 1 "switch VAr characterization" }
        maintain { 2 "maintain VAr characterization" }
    }

    define ClcTotVA_enum {
        vector     { 1 "vector calculation" }
        arithmetic { 2 "arithmetic calculation" }
    }
 
    define Connected_Phase_enum {
        PhA { 1 "phase A" }
        PhB { 2 "phase B" }
        PhC { 3 "phase C" }
    }
}


#
# Measurements Status
#
model suns {
    name "measurements_status"
    did 122 "inverter_basic_settings"
    datapoints {
        PVConn                  { enum16.ConnAvail_enum }
        StorConn                { enum16.ConnAvail_enum }
        ECPConn                 { enum16.ECPConn_enum }
        AC_Active_Energy        { acc64 }
        AC_Apparent_Energy      { acc64 }
        AC_Reactive_Energy_Q1   { acc64 }
        AC_Reactive_Energy_Q2   { acc64 }
        AC_Reactive_Energy_Q3   { acc64 }
        AC_Reactive_Energy_Q4   { acc64 }
        VArAval                 { uint16.VArAval_SF }
        VArAval_SF              { sunssf }
        StaSetPtLimMask         { bitfield32.StaSetPtLimMask_bf }
        TmSrc                   { string.16 }
        CurrTime                { uint32 }
    }


    define ConnAvail_enum {
        NA                      { 0 "not available" }
        DISCONNECTED_UNAVAIL    { 1 "disconnected unavailable" }
        DISCONNECTED_AVAIL      { 2 "disconnected available" }
        CONNECTED_UNAVAIL       { 3 "connected unavailable" }
        CONNECTED_AVAIL         { 4 "connected available" }
        CONNECTED_ON            { 5 "connected on" }
        TEST_MODE               { 6 "test mode" }
    }

    define ConnBool_enum {
        DISCONNECTED            { 0 "disconnected" }
        CONNECTED               { 1 "connected" }
    }

    define StaSetPtLimMask_bf {
        WMax                    { 0x01 "" }
        VAMax                   { 0x02 "" }
        VArPosMax               { 0x04 "" }
        VArNegMax               { 0x08 "" }
        VArAval                 { 0x10 "" }
        PFLeadMin               { 0x20 "" }
        PFLagMin                { 0x40 "" }
    }
}

        
#
# Immediate Inverter Controls
#
model suns {
    name "Immediate_Inverter_Controls"
    did 123 "Immediate_Inverter_Controls"
    datapoints {
        ImmCtl_Mode         { bitfield16.ImmCtl_bf access=rw }
        Connect             { enum16.Bool_enum access=rw }
        Connect_WinTms      { uint16 access=rw }
        Connect_RvrtTms     { uint16 access=rw }
        WMaxLimPct          { uint16.WMaxLimPct_SF access=rw }
        WMaxLimPct_SF       { sunssf }
        WMaxLimPct_WinTms   { uint16 access=rw }
        WMaxLimPct_RvrtTms  { uint16 access=rw }
        WMaxLimPct_RmpTims  { uint16.WMaxLimPct_SF access=rw }
    }
}




#
# Static Volt-Var
#
model suns {
    name "Static_Volt_Var"
    did 8007 "Static_Volt_Var"
    datapoints {
        VV_NCurves          { uint16 }
        VV_NPoints          { uint16 }
        VV_Active           { uint16 }
        VV_Active_Curve     { uint16 }
        VV_WinTms           { uint16 }
        VV_RvrtTms          { uint16 }
        VV_WinTms           { uint16 }
        VV_RmpTms           { uint16 }
        VV_Volt_SF          { sunssf }
        VV_RmpIncDec_SF     { sunssf }
}

model suns {
    name "Static_Volt-Var_Curve"
    did 8008 "Static_Volt-Var_Curve"
    datapoints {
        CrvNam              { string.16 }
        ActPt               { uint16 }
        DeptRef             { uint16 }
        DeptRef_SF          { sunssf }
        RmpPT1Tms           { uint16 }
        RmpDecTmm           { uint16 }
        RmpIncTmm           { uint16 }
    }
    datapoints repeating {
        V01                 { uint16 }
        VAr01               {  int16 }
        V02                 { uint16 }
        VAr02               {  int16 }
        V03                 { uint16 }
        VAr03               {  int16 }
        V04                 { uint16 }
        VAr04               {  int16 }
        V05                 { uint16 }
        VAr05               {  int16 }
        V06                 { uint16 }
        VAr06               {  int16 }
        V07                 { uint16 }
        VAr07               {  int16 }
        V08                 { uint16 }
        VAr08               {  int16 }
        V09                 { uint16 }
        VAr09               {  int16 }
        V10                 { uint16 }
        VAr10               {  int16 }
    }
}
